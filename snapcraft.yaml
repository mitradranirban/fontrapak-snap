
name: fontrapak
title: Fontra Pak (Unofficial snap package)
base: core22 # the base snap is the execution environment for this snap
version: unset
summary: Browser-based variable-first font editor # 79 char long summary
description: |
  Fontra is an open-source, browser-based, cross-platform, variable-first
  font editor. Fontra extends the boundaries of what current font editors
  can do. Originally developed to make the design and production of large
  CJK fonts more efficient, Fontra provides deeper integration of
  variable font technology and improved    usability of variable
  components as design elements.

grade: stable
confinement: strict

architectures:
  - build-on: amd64
    build-for: amd64

parts:
  # --- Part specifically to read local version.txt and set the snap version ---
  version-setter:
    plugin: nil      # This part doesn't contribute files, only runs scripts
    source: .        # Use local source directory to access version.txt
    override-pull: |
      # Read the version from the local version.txt file
      # Use tr -d '\n' to remove any trailing newline
      VERSION_FROM_FILE=$(cat $SNAPCRAFT_PART_SRC/version.txt | tr -d '\n')
      # Use snapcraftctl to set the overall snap version
      snapcraftctl set-version "$VERSION_FROM_FILE"
  # ---------------------------------------------------------------------------

  fontrapak:
    plugin: dump
    build-packages:
      - wget
      - tar
    override-pull: |
      snapcraftctl pull # Run default pull actions first (though none for plugin: dump without source:)

      cd "$SNAPCRAFT_PART_SRC"

      DOWNLOAD_URL="https://fonts.atipra.in/fontrapak/fontrapak.tgz"
      ARCHIVE_FILE="fontrapak.tgz"  
      echo "Attempting to download $DOWNLOAD_URL..."

      # Use wget to download. Adding a common User-Agent might help avoid rejection.
      wget --user-agent="Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36" \
           "$DOWNLOAD_URL" -O "$ARCHIVE_FILE"

      # Check if download succeeded
      if [ ! -f "$ARCHIVE_FILE" ] || [ ! -s "$ARCHIVE_FILE" ]; then
           echo "ERROR: Failed to download $ARCHIVE_FILE from $DOWNLOAD_URL"
           exit 1
      fi
      echo "Download successful."

      echo "Extracting $ARCHIVE_FILE..."
      # Extract the archive here. Use --strip-components=1 if the tarball has a single top-level directory
      # e.g., tar -xzf "$ARCHIVE_FILE" --strip-components=1
      tar -xzf "$ARCHIVE_FILE"
      echo "Extraction complete."
      # Optional: Remove the downloaded archive after extraction
      rm "$ARCHIVE_FILE"
     
    organize:
      fontrapak: bin/fontrapak
    stage-packages:
      - libgl1
      - libegl1
      - libxcb-cursor0
      - libxcb1
      - libxcb-render0
      - libxcb-shm0
      - libxcb-randr0
      - libxcb-xfixes0
      - libxkbcommon0
      - libqt5gui5        # Often needed for Qt applications
      - libqt5core5a      # Core Qt libraries
      - libqt5widgets5    # If your application uses widgets
      - libqt6gui6        # If your application uses Qt 6
      - libqt6core6       # Core Qt 6 libraries
      - libqt6widgets6    # If your application uses Qt 6 widgets
      - libstdc++6        # Standard C++ library (often a dependency)


icon: snap/gui/fontrapak.svg
license: GPL-3.0+

plugs:
  shared-memory:
    private: true

apps:
  fontrapak:
    command: desktop-launch bin/fontrapak
    environment:
      QT_QPA_PLATFORM: xcb # Required for Qt applications in a snap (PyInstaller often uses Qt)
      QT_QPA_PLATFORM_PLUGIN_PATH: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/qt5/plugins/platforms:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/qt6/plugins/platforms # Explicitly set plugin path
      LD_LIBRARY_PATH: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/mesa # Include Mesa libraries if needed
    plugs:
      - x11
      - unity7
      - opengl
      - network # if any network access is needed
      - home # if it needs access to user home directory
      - removable-media # if it needs access to removable media.
      - desktop
      - desktop-legacy
      - wayland # for wayland support
