# .github/workflows/check-new-release.yml
name: Check for New Release

on:
  schedule:
    # Run daily at 6:00 AM UTC
    - cron: '0 6 * * *'
  workflow_dispatch: # Allow manual triggering

jobs:
  check-release:
    runs-on: ubuntu-latest
    outputs:
      new-release: ${{ steps.check.outputs.new-release }}
      release-tag: ${{ steps.check.outputs.release-tag }}
      release-url: ${{ steps.check.outputs.release-url }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Check for new release
        id: check
        run: |
          # Get the latest release from the target repository
          LATEST_RELEASE=$(curl -s https://api.github.com/repos/mitradranirban/fontra-pak-linux/releases/latest)
          LATEST_TAG=$(echo "$LATEST_RELEASE" | jq -r '.tag_name')
          RELEASE_URL=$(echo "$LATEST_RELEASE" | jq -r '.html_url')
          
          echo "Latest release tag: $LATEST_TAG"
          
          # Check if we have a stored last checked tag
          if [ -f "last_checked_release.txt" ]; then
            LAST_CHECKED=$(cat last_checked_release.txt)
            echo "Last checked release: $LAST_CHECKED"
          else
            LAST_CHECKED=""
            echo "No previous release check found"
          fi
          
          # Compare tags
          if [ "$LATEST_TAG" != "$LAST_CHECKED" ] && [ "$LATEST_TAG" != "null" ]; then
            echo "New release found: $LATEST_TAG"
            echo "new-release=true" >> $GITHUB_OUTPUT
            echo "release-tag=$LATEST_TAG" >> $GITHUB_OUTPUT
            echo "release-url=$RELEASE_URL" >> $GITHUB_OUTPUT
            
            # Update the last checked release
            echo "$LATEST_TAG" > last_checked_release.txt
          else
            echo "No new release found"
            echo "new-release=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Commit updated release tag
        if: steps.check.outputs.new-release == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add last_checked_release.txt
          git commit -m "Update last checked release to ${{ steps.check.outputs.release-tag }}" || exit 0
          git push

  build-and-publish-snap:
    needs: check-release
    if: needs.check-release.outputs.new-release == 'true'
    runs-on: ubuntu-latest
    steps:
      # Step to check out the repository
      - name: Checkout repository
        uses: actions/checkout@v4
      
      # Step to build the snap package
      - name: Build Snap
        uses: snapcore/action-build@v1
        id: build
      
      # Step to upload snap as an artifact
      - name: Copy created snap
        run: |
          mkdir ul
          cp *.snap ul/
      
      - name: Upload Snap Artifact
        uses: actions/upload-artifact@v4
        with:
          name: fontra
          path: ul
      
      # Step to publish the snap package
      - name: Publish Snap
        uses: snapcore/action-publish@v1
        env:
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.STORE_LOGIN }}
        with:
          snap: ${{ steps.build.outputs.snap }}
          release: edge
