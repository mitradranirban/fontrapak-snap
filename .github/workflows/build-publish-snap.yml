name: Conditional Build and Publish Snap on weekdays
on:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron: "22 1 * * 1-5" 
  workflow_dispatch: # Allow manual trigger
jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.check_version.outputs.changed }}
    steps:
      # Step to fetch the current version.txt from the external URL
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Fetch current version.txt
        run: |
          curl -o current_version.txt https://fonts.atipra.in/fontrapak/fontrapak/version.txt

      # Step to compare current version with the previously stored version
      - name: Compare versions
        id: check_version
        run: |
          VERSION_FILE="version_tracker.txt"
          if [ -f "$VERSION_FILE" ]; then
            echo "Previous version file found."
            PREVIOUS_VERSION=$(cat $VERSION_FILE)
          else
            echo "No previous version file found. Setting up for the first time."
            PREVIOUS_VERSION="INITIAL"
          fi

          CURRENT_VERSION=$(cat current_version.txt)
          echo "Previous version: $PREVIOUS_VERSION"
          echo "Current version: $CURRENT_VERSION"
  
          if [ "$PREVIOUS_VERSION" != "$CURRENT_VERSION" ]; then
            echo "Version has changed."
            echo "changed=true" >> $GITHUB_OUTPUT
            # Update the previous version file and commit it
            echo "$CURRENT_VERSION" > $VERSION_FILE
            git config --global user.name "GitHub Actions"
            git config --global user.email "actions@github.com"
            git add $VERSION_FILE
            git commit -m "Update version tracker to $CURRENT_VERSION"
            git push
          else
            echo "Version has not changed."
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

  build-and-publish:
    runs-on: ubuntu-latest
    needs: check-version
    if: ${{ needs.check-version.outputs.changed == 'true' }}
    steps:
      # Step to check out the repository
      - name: Checkout repository
        uses: actions/checkout@v4
      
      # Step to build the snap package
      - name: Build Snap
        uses: snapcore/action-build@v1
        id: build
      
      # Step to upload snap as an artifact
      - name: Copy created snap
        run: |
          mkdir ul
          cp *.snap ul/
      
      - name: Upload Snap Artifact
        uses: actions/upload-artifact@v4
        with:
          name: fontra
          path: ul
      
      # Step to publish the snap package
      - name: Publish Snap
        uses: snapcore/action-publish@v1
        env:
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.STORE_LOGIN }}
        with:
          snap: ${{ steps.build.outputs.snap }}
          release: edge
